#user  nobody;

worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  text/html;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    keepalive_timeout   10;
    send_timeout        10;
    server_tokens       off;

    # todo: latest nginx release does not bundle gzip
    #gzip_proxied        any;
    #gzip_min_length     1000;
    #gzip_types          *;

    rewrite_log on;

    server {
        listen 80 default_server;
       server_name _;
       return 301 https://$host$request_uri;
    }

    server {

        listen 443 http2 ssl;
        server_name         localhost *.localhost,*.amazonaws.com,3sharp.net,*.3sharp.net;

        location ~* \.(js|jpg|png|css)$ {
            root /usr/share/nginx/html/static/;
            expires 30d;
        }       

        error_page  404              /404.html;
        error_page  500 502 503 504  /50x.html;

        ssl_certificate     ssl/nginx.crt;
        ssl_certificate_key ssl/nginx.key;
        ssl_dhparam                 ssl/dhparam.pem;

        ssl_session_cache           shared:SSL:1m;
        ssl_session_tickets         off;
        ssl_session_timeout         5m;
        ssl_ciphers                 ALL:!EXP:!NULL:!ADH:!LOW:!SSLv2:!SSLv3:!MD5:!RC4;
        ssl_prefer_server_ciphers   on;
        ssl_protocols               TLSv1.2;

        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-CorrelationID,Authorization';
                add_header 'Access-Control-Max-Age' 300000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-CorrelationID,Authorization';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }

            root   /usr/share/nginx/html;
            # index  index.html index.htm;
            try_files $uri /index.html;
        }

        # location ~* ^/private/health$ {

        #     rewrite /private/health /.well-known/apollo/server-health  break;

        #     resolver 127.0.0.11 ipv6=off;
        #     proxy_ssl_verify off;
        #     proxy_ssl_server_name on;
        #     proxy_set_header Host $http_host;

        #     # proxy to express container.
        #     proxy_pass http://express:5000;

        #     add_header X-Request-time $request_time;
        # }

        # location ~* ^/splunk$ {
        #     resolver 127.0.0.11 ipv6=off;

        #     # configure upstream parameters
        #     proxy_read_timeout      60s;
        #     client_max_body_size    0;
        #     proxy_buffering         off;
        #     proxy_redirect          off;
        #     proxy_ssl_verify        off;
        #     proxy_ssl_server_name   on;
        #     proxy_ssl_ciphers       HIGH:!aNULL:!CAMELLIA:!SHA:!RSA;
        #     proxy_ssl_protocols     TLSv1.2;

        #     proxy_set_header Host $http_host;
        #     proxy_set_header    X-Real-IP $remote_addr;
        #     proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;

        #     proxy_hide_header   X-Powered-By;
        #     proxy_hide_header   Server;

        #     # header control - note these are also enforced by gateway if not present here
        #     proxy_hide_header       X-Powered-By;
        #     proxy_hide_header       Server;
        #     add_header  Strict-Transport-Security "max-age=15768000;";
        #     add_header  X-Frame-Options "SAMEORIGIN";
        #     add_header  X-Content-Type-Options "nosniff";
        #     add_header  X-Xss-Protection "1; mode=block";
        #     add_header  Referrer-Policy "no-referrer";

        #     # proxy to express container.
        #     proxy_pass http://express:5000;
        #  }

        # location ~* ^/graphql$ {
        #     resolver 127.0.0.11 ipv6=off;

        #     # configure upstream parameters
        #     proxy_read_timeout      60s;
        #     client_max_body_size    0;
        #     proxy_buffering         off;
        #     proxy_redirect          off;
        #     proxy_ssl_verify        off;
        #     proxy_ssl_server_name   on;
        #     proxy_ssl_ciphers       HIGH:!aNULL:!CAMELLIA:!SHA:!RSA;
        #     proxy_ssl_protocols     TLSv1.2;

        #     proxy_set_header Host $http_host;
        #     proxy_set_header    X-Real-IP $remote_addr;
        #     proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;

        #     proxy_hide_header   X-Powered-By;
        #     proxy_hide_header   Server;

        #     # header control - note these are also enforced by gateway if not present here
        #     proxy_hide_header       X-Powered-By;
        #     proxy_hide_header       Server;
        #     add_header  Strict-Transport-Security "max-age=15768000;";
        #     add_header  X-Frame-Options "SAMEORIGIN";
        #     add_header  X-Content-Type-Options "nosniff";
        #     add_header  X-Xss-Protection "1; mode=block";
        #     add_header  Referrer-Policy "no-referrer";

        #     # proxy to express container.
        #     proxy_pass http://express:5000;

        # }




        location ~ /\. {
            deny all;
            return 404;
        }

    }

}

 